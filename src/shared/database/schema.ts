/* eslint-disable -- autogenerated file */
/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _DexExQueue {
  data: Buffer;
  height: Int8;
  id: Generated<number>;
}

export interface _DexExSummaryBacking {
  asset_end: Buffer;
  asset_start: Buffer;
  direct_volume: number;
  price: number;
  swap_volume: number;
  time: Timestamp;
}

export interface _InsightsShieldedPoolDepositors {
  address: string;
  asset_id: Buffer;
}

export interface _InsightsValidators {
  height: Int8;
  rate_bps2: Int8;
  um: Int8;
  validator_id: string;
}

export interface BlockDetails {
  height: Int8;
  root: Buffer;
  timestamp: Timestamp;
}

export interface DexExCandlesticks {
  close: number;
  direct_volume: number;
  high: number;
  id: Generated<number>;
  low: number;
  open: number;
  swap_volume: number;
}

export interface DexExPriceCharts {
  asset_end: Buffer;
  asset_start: Buffer;
  candlestick_id: number | null;
  id: Generated<number>;
  start_time: Timestamp;
  the_window: string;
}

export interface DexExSummary {
  asset_end: Buffer;
  asset_start: Buffer;
  current_price: number;
  direct_volume_24h: number;
  high_24h: number;
  low_24h: number;
  price_24h_ago: number;
  swap_volume_24h: number;
}

export interface GovernanceDelegatorVotes {
  block_height: Int8;
  id: Generated<number>;
  identity_key: string;
  proposal_id: number;
  vote: Json;
  voting_power: Int8;
}

export interface GovernanceProposals {
  description: string;
  end_block_height: Int8;
  id: Generated<number>;
  kind: Json;
  payload: Json | null;
  proposal_deposit_amount: Int8;
  proposal_id: number;
  start_block_height: Int8;
  state: Json;
  title: string;
  withdrawal_reason: string | null;
  withdrawn: Generated<boolean | null>;
}

export interface GovernanceValidatorVotes {
  block_height: Int8;
  id: Generated<number>;
  identity_key: string;
  proposal_id: number;
  vote: Json;
  voting_power: Int8;
}

export interface IbcTransfer {
  amount: Numeric;
  asset: Buffer;
  foreign_addr: string;
  height: Int8;
  id: Generated<number>;
  kind: string;
  penumbra_addr: Buffer;
}

export interface IndexWatermark {
  events_rowid: Int8;
}

export interface InsightsShieldedPool {
  asset_id: Buffer;
  current_value: string;
  height: Int8;
  total_value: string;
  unique_depositors: number;
}

export interface InsightsShieldedPoolLatest {
  asset_id: Buffer | null;
  current_value: string | null;
  height: Int8 | null;
  total_value: string | null;
  unique_depositors: number | null;
}

export interface InsightsSupply {
  height: Int8;
  market_cap: Generated<number | null>;
  price: number | null;
  price_numeraire_asset_id: Buffer | null;
  staked: Int8;
  total: Int8;
}

export interface ShieldedPoolFmdClueSet {
  clue_bytes: Buffer;
  id: Generated<number>;
  tx_hash: Buffer;
}

export interface StakeDelegationTxs {
  amount: Int8;
  height: Int8;
  id: Generated<number>;
  ik: string;
  tx_hash: Buffer;
}

export interface StakeSlashings {
  epoch_index: Int8;
  height: Int8;
  id: Generated<number>;
  ik: string;
  penalty: string;
}

export interface StakeUndelegationTxs {
  amount: Int8;
  height: Int8;
  id: Generated<number>;
  ik: string;
  tx_hash: Buffer;
}

export interface StakeValidatorSet {
  bonding_state: string;
  definition: string;
  id: Generated<number>;
  ik: string;
  name: string;
  queued_delegations: Int8;
  queued_undelegations: Int8;
  validator_state: string;
  voting_power: Int8;
}

export interface SupplyTotalStaked {
  del_um: Int8;
  height: Int8;
  rate_bps2: Int8;
  um: Int8;
  validator_id: number;
}

export interface SupplyTotalUnstaked {
  arb: Int8;
  auction: Int8;
  dex: Int8;
  fees: Int8;
  height: Int8;
  um: Int8;
}

export interface SupplyValidators {
  id: Generated<number>;
  identity_key: string;
}

export interface DB {
  _dex_ex_queue: _DexExQueue;
  _dex_ex_summary_backing: _DexExSummaryBacking;
  _insights_shielded_pool_depositors: _InsightsShieldedPoolDepositors;
  _insights_validators: _InsightsValidators;
  block_details: BlockDetails;
  dex_ex_candlesticks: DexExCandlesticks;
  dex_ex_price_charts: DexExPriceCharts;
  dex_ex_summary: DexExSummary;
  governance_delegator_votes: GovernanceDelegatorVotes;
  governance_proposals: GovernanceProposals;
  governance_validator_votes: GovernanceValidatorVotes;
  ibc_transfer: IbcTransfer;
  index_watermark: IndexWatermark;
  insights_shielded_pool: InsightsShieldedPool;
  insights_shielded_pool_latest: InsightsShieldedPoolLatest;
  insights_supply: InsightsSupply;
  shielded_pool_fmd_clue_set: ShieldedPoolFmdClueSet;
  stake_delegation_txs: StakeDelegationTxs;
  stake_slashings: StakeSlashings;
  stake_undelegation_txs: StakeUndelegationTxs;
  stake_validator_set: StakeValidatorSet;
  supply_total_staked: SupplyTotalStaked;
  supply_total_unstaked: SupplyTotalUnstaked;
  supply_validators: SupplyValidators;
}
